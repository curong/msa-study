version: '3.1'
services:
  # Postgresql
  db_postgres:
    image: postgres:latest
    restart: always
    container_name: db_postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: msa
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
    volumes:
      - ./volume/postgres/data:/var/lib/postgresql/data
    networks:
      - msa-study-network
  
  # Database 접속도구
  adminer:
    image: adminer
    restart: always
    container_name: db_postgres_adminer
    ports:
      - 5433:8080
    networks:
      - msa-study-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./volume/redis/data:/data
      - ./volume/redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always
    command: redis-server /usr/local/conf/redis.conf
    networks:
      - msa-study-network

  # FTP_vsftpd
  vsftpd:
        image: fauria/vsftpd
        container_name: vsftpd
        # platform: linux/amd64
        environment:
            - FTP_USER=root
            - FTP_PASS=1234
            - PASV_MIN_PORT=21100
            - PASV_MAX_PORT=21110
            - PASV_ADDRESS=0.0.0.0
        ports:
            - 0.0.0.0:2020:20
            - 0.0.0.0:2121:21
            - 0.0.0.0:21100-21110:21100-21110
        volumes:
            - ./volume/ftp:/home/vsftpd/root
            - ./volume/ftp/log/vsftpd:/var/log/vsftpd

  # zookeeper-1:
  #   image: confluentinc/cp-zookeeper:latest
  #   ports:
  #     - '2181:32181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # kafka-1:
  #   image: confluentinc/cp-kafka:latest
  #   ports:
  #     - '9092:9092'
  #   depends_on:
  #     - zookeeper-1
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:49092,EXTERNAL://localhost:9092
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  #     KAFKA_NUM_PARTITIONS: 3

  # kafka-2:
  #   image: confluentinc/cp-kafka:latest
  #   ports:
  #     - '9093:9093'
  #   depends_on:
  #     - zookeeper-1
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:49093,EXTERNAL://localhost:9093
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  #     KAFKA_NUM_PARTITIONS: 3

  # kafka-3:
  #   image: confluentinc/cp-kafka:latest
  #   ports:
  #     - '9094:9094'
  #   depends_on:
  #     - zookeeper-1
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:49094,EXTERNAL://localhost:9094
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  #     KAFKA_NUM_PARTITIONS: 3

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - "7070:8080"
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=msa_study
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:49092,kafka-2:49093,kafka-3:49094
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:22181

  # Config Server
  config-server:
    build:
      context: ../config/config-server
      dockerfile: .Dockerfile
    container_name: config-server
    ports:
      - 10000:10000
    networks:
      - msa-study-network
    environment:
      CONFIG_SERVER_USERNAME: "admin"
      CONFIG_SERVER_PASSWORD: "1234"

# Auth Server
  auth-service:
    build:
      context: ../auth-service
      dockerfile: .Dockerfile
    depends_on:
      - config-server
    container_name: auth-service
    ports:
      - 50000:50000
    networks:
      - msa-study-network
    environment:
      SPRING_PROFILES_ACTIVE: "dev" # 개발 환경 프로파일 활성화
      SPRING_CONFIG_IMPORT: "optional:configserver:http://admin:1234@config-server:10000"
      SPRING.DATASOURCE.URL: "jdbc:postgresql://db_postgres:5432/msa"
      SPRING.DATASOURCE.USERNAME: "root"
      SPRING.DATASOURCE.PASSWORD: "1234"

# Forum Server
  forum-service:
    build:
      context: ../forum-service
      dockerfile: .Dockerfile
    depends_on:
      - config-server
    container_name: forum-service
    ports:
      - 60000:60000
    networks:
      - msa-study-network
    environment:
      SPRING_PROFILES_ACTIVE: "dev" # 개발 환경 프로파일 활성화
      SPRING_CONFIG_IMPORT: "optional:configserver:http://admin:1234@config-server:10000"
      SPRING.DATASOURCE.URL: "jdbc:postgresql://db_postgres:5432/msa"
      SPRING.DATASOURCE.USERNAME: "root"
      SPRING.DATASOURCE.PASSWORD: "1234"

# File Server
  file-service:
    build:
      context: ../file-service
      dockerfile: .Dockerfile
    depends_on:
      - config-server
    container_name: file-service
    ports:
      - 40000:40000
    networks:
      - msa-study-network
    environment:
      SPRING_PROFILES_ACTIVE: "dev" # 개발 환경 프로파일 활성화
      SPRING_CONFIG_IMPORT: "optional:configserver:http://admin:1234@config-server:10000"


      

x-stack-name: msa-study

networks:
  msa-study-network:
    